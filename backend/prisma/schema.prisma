datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --- MODELOS DE USUÁRIO E AUTENTICAÇÃO ---
model roles {
  id_role   Int      @id @default(autoincrement())
  nome_role String
  usuarios  usuarios[]
}

model usuarios {
  id_usuario    Int      @id @default(autoincrement())
  nome          String
  email         String   @unique
  senha         String
  telefone      String?
  data_cadastro DateTime @default(now())
  id_role       Int
  role          roles    @relation(fields: [id_role], references: [id_role])
  enderecos     enderecos[]
  pedidos       pedidos[]
}

model enderecos {
  id_endereco Int      @id @default(autoincrement())
  id_usuario  Int
  logradouro  String
  numero      String
  complemento String?
  cidade      String
  estado      String
  cep         String
  usuario     usuarios @relation(fields: [id_usuario], references: [id_usuario])
}

// --- MODELOS DE PRODUTO E CATÁLOGO ---
model categorias {
  id_categoria    Int      @id @default(autoincrement())
  nome_categoria String
  descricao      String?
  produtos        produtos[]
}

model produtos {
  id_produto      Int            @id @default(autoincrement())
  nome_produto    String         @unique
  descricao       String?
  preco           Decimal        @db.Decimal(10, 2)
  id_categoria    Int
  tipo            String?
  variacoes_estoque Json? // Armazena a lista de todas as variações (cor, tamanho, sku, estoque)
  categoria       categorias     @relation(fields: [id_categoria], references: [id_categoria])
  fotos           fotos_produtos[]
  pedidos         pedido_produtos[]
  // VariacaoProduto[] FOI REMOVIDO - O modelo VariacaoProduto não existe mais
}

model fotos_produtos {
  id_foto    Int     @id @default(autoincrement())
  id_produto Int
  url        String  @db.VarChar(255)
  descricao  String? @db.VarChar(255)

  produto produtos @relation(fields: [id_produto], references: [id_produto])

  @@index([id_produto])
}

// --- MODELOS DE PEDIDO E CARRINHO ---
model pedidos {
  id_pedido    Int      @id @default(autoincrement())
  id_usuario   Int
  data_pedido  DateTime @default(now())
  status       String   
  total        Decimal  @db.Decimal(10, 2)

  usuario        usuarios          @relation(fields: [id_usuario], references: [id_usuario])
  pedidoProdutos pedido_produtos[] 
}

model pedido_produtos {
  id_pedido      Int
  id_produto     Int
  
  // *** NOVO CAMPO PARA REGISTRAR A VARIAÇÃO COMPRADA ***
  sku_variacao   String // Ex: M-AZUL. Garante a imutabilidade do item do pedido.

  quantidade     Int
  preco_unitario Decimal @db.Decimal(10, 2)

  pedido  pedidos  @relation(fields: [id_pedido], references: [id_pedido])
  produto produtos @relation(fields: [id_produto], references: [id_produto])

  @@id([id_pedido, id_produto])
}